server:
  port: 8080

camel:
  springboot:
    name: ServicesRest
management:
    endpoint:
      health:
        show-components: always
        show-details: always
    port: 8081

endpoints:
  enabled: false
  health:
    enabled: true
quickstart:
  generateOrderPeriod: 10s
  processOrderPeriod: 30s

#Uncomment this values and update with your API values
#api:
#  domain: ${domain}
#  app-name: ${serviceName}
#  main-event-name: api-v1-${api.domain}-${api.app-name}

aviva:
  integration:
    securityrepository:
      debug: true
      # See all settings here: https://dev.azure.com/avdigitalweb/DigitalIntegration/_git/core-security-repository-server?path=%2Fcore-security-repository-core&version=GBdevelop
      # If you are on a VDI, you may need to run an instance of this server locally or write a wiremock.
      # If so, override with -Daviva.integration.securityrepository.uri=... instead of changing this file.
#      uri: https://api.integration.dev.aws-euw1-np.avivacloud.com/core/v1/security-repository-server/auth
      uri: http://localhost:8080/api/v1/groupPensions/core/security-repository-server/auth
      problem-details-shape: RFC_2616

#  cle:
#    batch:
#      enabled: true
# Enables debugging and authorization debugging (do not enable for higher environments)
debug: false

logging:
  level:
    root: INFO
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include:
          - health
          - info
          - metrics
          - purgecache
  health:
    livenessstate:
      enabled: true
    r2dbc:
      enabled: true
    readinessstate:
      enabled: true
  info:
    git:
      mode: full
  metrics:
    distribution:
      percentiles-histogram:
        http:
          server:
            requests: true

spring:
  devtools:
    # Disable for AWS
    add-properties: true
  jmx:
    enabled: true
  # Colourful logs for local debugging, as this makes it much easier to read.
  # Disable for AWS.
  output:
    ansi:
      enabled: ALWAYS
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://demo
          jwk-set-uri: http://localhost:8080/api/v1/groupPensions/core/jwks

  # HTTP2 is good.
  http2:
    enabled: true
  # Override with -Dserver.port=xxxx to override this.
#  port: 8080
#  servlet:
#    context-path: /${api.domain}/api/v1/${api.app-name}
  
  tomcat:
    # Don't redirect `${server.servlet.context-path}` to `${server.servlet.context-path}/`, as it
    # messes with the ALB...
    redirect-context-root: false

# Enables tracing and authorization debugging (do not enable for higher environments)
trace: false
